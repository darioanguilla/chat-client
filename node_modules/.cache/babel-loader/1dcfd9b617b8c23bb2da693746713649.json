{"ast":null,"code":"var _jsxFileName = \"/Users/ignaziosammarco/Desktop/arces/chat-client/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport { Component } from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { useRef, useEffect } from \"react\";\nimport \"./Chat.css\"; // const client = new W3CWebSocket(\"ws://localhost:8080/chat\");\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new WebSocket('wss://chat-server-spring.herokuapp.com/chat');\nconst messages = [// {id:\"1\", text:\"Dummy message 1\"},\n  // {id:\"2\", text:\"Dummy message 2\"}\n];\n\nconst AlwaysScrollToBottom = () => {\n  _s();\n\n  const elementRef = useRef();\n  useEffect(() => elementRef.current.scrollIntoView());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: elementRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AlwaysScrollToBottom, \"CKe/C9l/PZDcdMrjDfTWxieUegY=\");\n\n_c = AlwaysScrollToBottom;\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendMessage = () => {\n      client.send(JSON.stringify(this.state.message));\n      this.setState({\n        message: { ...this.state.message,\n          text: \"\"\n        }\n      });\n    };\n\n    this.state = {\n      messages: messages,\n      message: {\n        from: \"Ignazio\",\n        text: \"\"\n      }\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      message: { ...this.state.message,\n        text: e.target.value\n      }\n    });\n  } // Manda il messaggio salvato sullo state e lo azzera\n\n\n  componentDidMount() {\n    client.onopen = () => {\n      console.log(\"WebSocket Client Connected\");\n    };\n\n    client.onmessage = message => {\n      console.log(message.data);\n      message = JSON.parse(message.data);\n      let id = this.state.messages.length;\n      this.setState({\n        messages: [...this.state.messages, {\n          id: id + 1,\n          from: message.from,\n          text: message.text\n        }]\n      });\n    };\n\n    client.onclose = () => {\n      console.log(\"WebSocket connection closed\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-heading\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"white\",\n            children: \"Chat React e WebSockets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"messages\",\n          className: \"messages\",\n          children: [this.state.messages.map(message => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-from\",\n                children: this.state.message.from\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-text\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: message.text\n                }, message.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(AlwaysScrollToBottom, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"message-input-text\",\n            value: this.state.message.text || \"\",\n            onChange: this.handleChange.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"message-input-send\",\n            onClick: () => this.sendMessage(),\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Chat; // Fonti\n// https://www.freecodecamp.org/news/how-to-build-a-react-js-chat-app-in-10-minutes-c9233794642b/\n\nvar _c;\n\n$RefreshReg$(_c, \"AlwaysScrollToBottom\");","map":{"version":3,"sources":["/Users/ignaziosammarco/Desktop/arces/chat-client/src/components/Chat.js"],"names":["Component","w3cwebsocket","W3CWebSocket","useRef","useEffect","client","WebSocket","messages","AlwaysScrollToBottom","elementRef","current","scrollIntoView","Chat","constructor","props","sendMessage","send","JSON","stringify","state","message","setState","text","from","handleChange","e","target","value","componentDidMount","onopen","console","log","onmessage","data","parse","id","length","onclose","render","map","bind"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { useRef, useEffect } from \"react\";\nimport \"./Chat.css\";\n\n// const client = new W3CWebSocket(\"ws://localhost:8080/chat\");\nconst client = new WebSocket('wss://chat-server-spring.herokuapp.com/chat');\n\nconst messages = [\n  // {id:\"1\", text:\"Dummy message 1\"},\n  // {id:\"2\", text:\"Dummy message 2\"}\n];\n\nconst AlwaysScrollToBottom = () => {\n  const elementRef = useRef();\n  useEffect(() => elementRef.current.scrollIntoView());\n  return <div ref={elementRef} />;\n};\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { messages: messages, message: { from: \"Ignazio\", text: \"\" } };\n  }\n\n  handleChange(e) {\n    this.setState({\n      message: {\n        ...this.state.message,\n        text: e.target.value,\n      },\n    });\n  }\n\n  // Manda il messaggio salvato sullo state e lo azzera\n  sendMessage = () => {\n    client.send(JSON.stringify(this.state.message));\n\n    this.setState({\n      message: {\n        ...this.state.message,\n        text: \"\",\n      },\n    });\n  };\n\n  componentDidMount() {\n    client.onopen = () => {\n      console.log(\"WebSocket Client Connected\");\n    };\n    client.onmessage = (message) => {\n      console.log(message.data);\n      message = JSON.parse(message.data);\n      let id = this.state.messages.length;\n      this.setState({\n        messages: [\n          ...this.state.messages,\n          { id: id + 1, from: message.from, text: message.text },\n        ],\n      });\n    };\n    client.onclose = () => {\n      console.log(\"WebSocket connection closed\");\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"chatbox\">\n          <div className=\"chat-heading\">\n            <h3 className=\"white\">Chat React e WebSockets</h3>\n          </div>\n          <div id=\"messages\" className=\"messages\">\n            {this.state.messages.map((message) => {\n              return (\n                <div id=\"wrapper\">\n                  <div className=\"message-from\">{this.state.message.from}</div>\n                  <div className=\"message-text\">\n                    <div key={message.id}>\n                      {message.text}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n            <AlwaysScrollToBottom />\n          </div>\n          <div className=\"message-input\">\n            <input\n              className=\"message-input-text\"\n              value={this.state.message.text || \"\"}\n              onChange={this.handleChange.bind(this)}\n            ></input>\n            <button\n              className=\"message-input-send\"\n              onClick={() => this.sendMessage()}\n            >\n              Send\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Chat;\n\n// Fonti\n// https://www.freecodecamp.org/news/how-to-build-a-react-js-chat-app-in-10-minutes-c9233794642b/\n"]},"metadata":{},"sourceType":"module"}