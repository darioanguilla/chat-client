{"ast":null,"code":"var _jsxFileName = \"/Users/ignaziosammarco/Desktop/arces/chat-client/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport { Component } from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { useRef, useEffect } from 'react';\nimport './Chat.css'; // const client = new W3CWebSocket('ws://localhost:8080/chat');\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new W3CWebSocket('wss://chat-server-spring.herokuapp.com/chat');\nconst messages = [// {id:\"1\", text:\"Dummy message 1\"},\n  // {id:\"2\", text:\"Dummy message 2\"}\n];\nconst initialState = {\n  sender: \"\",\n  messages: [],\n  message: \"\"\n};\n\nconst AlwaysScrollToBottom = () => {\n  _s();\n\n  const elementRef = useRef();\n  useEffect(() => elementRef.current.scrollIntoView());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: elementRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AlwaysScrollToBottom, \"CKe/C9l/PZDcdMrjDfTWxieUegY=\");\n\n_c = AlwaysScrollToBottom;\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendMessage = () => {\n      client.send(\"Ignazio: \" + this.state.message);\n      this.setState({\n        message: ''\n      });\n    };\n\n    this.state = { ...initialState\n    };\n    this.state = {\n      message: \"\"\n    };\n    this.state = {\n      messages: messages\n    };\n    console.log(this.state);\n  }\n\n  handleChange(e) {\n    this.setState({\n      message: e.target.value\n    });\n  } // Manda il messaggio salvato e aggiornato sullo state \n\n\n  componentDidMount() {\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n\n    client.onmessage = message => {\n      let id = this.state.messages.length;\n      this.setState({\n        messages: [...this.state.messages, {\n          id: id,\n          text: message.data\n        }]\n      });\n      console.log(message);\n    };\n\n    client.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat realizzata con React e WebSockets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"messages\",\n          className: \"messages\",\n          children: [this.state.messages.map(message => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              children: message.text\n            }, message.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(AlwaysScrollToBottom, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"message-input-text\",\n            value: this.state.message || \"\",\n            onChange: this.handleChange.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"message-input-send\",\n            onClick: () => this.sendMessage(),\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Chat; // Fonti\n// https://www.freecodecamp.org/news/how-to-build-a-react-js-chat-app-in-10-minutes-c9233794642b/\n// https://github.com/simpletut/react-real-time-chat-app/blob/master/Frontend/app/src/pages/chat.js\n\nvar _c;\n\n$RefreshReg$(_c, \"AlwaysScrollToBottom\");","map":{"version":3,"sources":["/Users/ignaziosammarco/Desktop/arces/chat-client/src/components/Chat.js"],"names":["Component","w3cwebsocket","W3CWebSocket","useRef","useEffect","client","messages","initialState","sender","message","AlwaysScrollToBottom","elementRef","current","scrollIntoView","Chat","constructor","props","sendMessage","send","state","setState","console","log","handleChange","e","target","value","componentDidMount","onopen","onmessage","id","length","text","data","onclose","render","map","bind"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { useRef, useEffect  } from 'react';\nimport './Chat.css';\n\n// const client = new W3CWebSocket('ws://localhost:8080/chat');\nconst client = new W3CWebSocket('wss://chat-server-spring.herokuapp.com/chat');\n\nconst messages = [\n  // {id:\"1\", text:\"Dummy message 1\"},\n  // {id:\"2\", text:\"Dummy message 2\"}\n];\nconst initialState = {\n  sender: \"\",\n  messages: [],\n  message: \"\"\n};\n\n\nconst AlwaysScrollToBottom = () => {\n  const elementRef = useRef();\n  useEffect(() => elementRef.current.scrollIntoView());\n  return <div ref={elementRef} />;\n};\n\nclass Chat extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...initialState,\n    };\n    this.state = { message: \"\" }\n    this.state = {messages: messages}\n    console.log(this.state)\n  }\n\n  handleChange(e) {\n    this.setState({\n        message : e.target.value\n    });\n  }\n  \n  // Manda il messaggio salvato e aggiornato sullo state \n  sendMessage = () => {\n    client.send(\"Ignazio: \" + this.state.message);\n    this.setState({\n      message: ''\n    });\n  }\n\n  componentDidMount() {\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n    client.onmessage = (message) => {\n      let id = this.state.messages.length;\n      this.setState({\n        messages: [...this.state.messages, {id:id,text: message.data}]\n      })\n      console.log(message);\n    };\n    client.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Chat realizzata con React e WebSockets</h2>\n        <div className=\"chatbox\">\n          <div id=\"messages\" className=\"messages\">\n            {this.state.messages.map((message) => {\n              return (\n                <div className=\"message-text\" key={message.id}>\n                  {message.text}\n                </div>\n              );\n            })}\n            <AlwaysScrollToBottom />\n          </div>\n          <div className=\"message-input\">\n            <input\n              className=\"message-input-text\"\n              value={this.state.message || \"\"}\n              onChange={this.handleChange.bind(this)}\n            ></input>\n            <button\n              className=\"message-input-send\"\n              onClick={() => this.sendMessage()}\n            >\n              Send\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Chat;\n\n\n// Fonti\n// https://www.freecodecamp.org/news/how-to-build-a-react-js-chat-app-in-10-minutes-c9233794642b/\n// https://github.com/simpletut/react-real-time-chat-app/blob/master/Frontend/app/src/pages/chat.js"]},"metadata":{},"sourceType":"module"}